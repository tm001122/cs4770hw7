import binascii
import struct
from PIL import Image
import io

# Step 1: Function to convert hex string to bytes
def hex_to_bytes(hex_str):
    return binascii.unhexlify(hex_str)

# Step 2: XOR operation on the byte data with the Ohio ID (8 bytes at a time)
def xor_data_with_id(data, ohio_id):
    # Ensure Ohio ID is 8 bytes (TM + 6 digits)
    ohio_id_bytes = ohio_id.encode('utf-8')[:8]  # Limit to first 8 bytes if necessary
    ohio_id_bytes = ohio_id_bytes.ljust(8, b'\x00')  # Pad with zeros if less than 8 bytes
    xor_result = bytearray()

    # XOR each 8-byte chunk with Ohio ID
    for i in range(0, len(data), 8):
        chunk = data[i:i+8]
        xor_chunk = bytes(a ^ b for a, b in zip(chunk, ohio_id_bytes))
        xor_result.extend(xor_chunk)

    return bytes(xor_result)

# Step 3: Write the XOR'd data to an image file
def save_image_from_data(xor_data, output_file):
    # Create an image from the XOR'd data (assuming it's a 64x64 grayscale PNG)
    image = Image.open(io.BytesIO(xor_data))
    image.save(output_file)

# Step 4: Main function to process the hex data and save the image
def process_wireshark_data(hex_data, ohio_id, output_file):
    # Step 1: Convert hex string to bytes
    data = hex_to_bytes(hex_data)

    # Step 2: XOR the data with Ohio ID
    xor_data = xor_data_with_id(data, ohio_id)

    # Step 3: Save the XOR'd data as a PNG image
    save_image_from_data(xor_data, output_file)
    print(f"Image saved as {output_file}")

# Example usage
if __name__ == "__main__":
    # Wireshark hex data (replace with the actual data from tshark)
    hex_data = 'fd3d7e773c3b2838746d303d78797660746d3070313132727c6b3030319b5b43aa6d30314458717124067377725e5e5d063e40515254765b071d5c51486101327445a145a18c79f12479f57f9a63e208fc632d2c03b871e6a6674641591a26774439359b62ab4c3b19111419634021655d952f68f0684282fc3940414121763565b0ac0a18895a4aaafa64ea13eff5d78955ac43886df22924741bc63319dba4e521f49484e588d60feeb7ae629b5480dccf1c3acfcc89d987bcc5ee7eb96b7fcf1b20e97e6da5fc5afa46ae33624dcf29b8aff9ab2bcfeda02cbd2927d1a3bbe100bb39ef142c031c44d29ad18df9f5f6be1eaf0aafa756e895a668e33b58b4cc241c970ac54e35e3e7559d84b2eaecebb867a7f42dd863b80c231629bb6263f56935d14ecde1bc4be31d426651621cfb6f1cfa75782321c6a9c3e090502000056571daa18941d90a629dcbf85c5fdd61f55d40ff1ee8e8366e08ad90a2e7e9ae1534282b315cd838586477db90c4d406adcb3901a930b49b458351d7f313450f123cd84ad0ce51789d2d3247a4c19d57a3dd2ab4aeb319896a27195b8d613435a630303149576a3d0b7d7d311b32327465303530373231746d3031313332327577303531313233746d307a302a3237746d3031313132607545303331313233746f3030b6583236746d303131313268746d30303131327a746d30313131327a746d3031313392307469303031303232742d903331353232746c303031713232746dc070e661323274644078684232327f7e30303a223332eef1283031324e5b203544687c7d08511b001e51555e50575a155d40313132327451480a495c425f11195110495c5e5c0757480d1350565d16080a5e420b5f57000c1f121149084a191d445b0c136a7f244d735f435412045a5d1e00130f3812544d0c4255570860302b10485c5d5c414e1f54560c135a46001d0a1f1e4645455a1a031e5e43551d455409091e01001d465f1d4255571f410d034451491c5c41574f0e3a11111212544d0c4255570876111e53425841465b1b03104255570853160245440c131038544d101011111212544d1010495c5e5c075754530c135a46001d0a1f1e41474018435f42561e56515b085c555c545c460742011e001e1038544d101011111212544d1010495c5e5c0757445957570f101c1944400b1e1d5c074351545e53571c17025d1f455854545b5c1e001e133812544d101011111212544d10485c5d5c414e24404452054a5f042848440c135a46001d0a1f1e58424617435f42561e4146104279404552064a191d7548451e000244551d00031c000b5b4f0e3a11111212544d1010110d56514e1959445d540c38544d101011111212544d10100d4356544e2c5c440f3b1212544d101011111212544d1010110d405612575c5911495f5e4e01515e560c104a5909555650445e465653655e4558465e110910714345455d06060c1f4355540818040e3a11111212544d10101111121248424254570b735e00533a1011111212544d10100d1e56514e1959445d540c38544d101011111212545144595757086b2608435f5d44465b1b030e07030d1d461d0b560a686357411b014544585e5c0c7e4d101011111212544d0c44585754082c3f55435e5d47461d025e0e06030e1d000456560b69605707025c4545585d5c4a67101011111212544d100c455854544e3d585f455e5f57001f5953785f4657061d42554550465b1b030e020d1e465b120b0a60595e465d1908444258527b5c000842404354465300045f5e0f3b1212544d10101111120e000456560b6357411b014544585e5c671a04440e030d1d461d0b560a6354415d181844595e5f675c1d190e3a11111212544d1010110d7b42000e04485c41774a0057714245465d401f3959445d540c671a1959445d545612351f44475e43590e5b24404452054a5f042848440b7040460302425b6558465e11533a101111121254511f4255570876111e53425841465b1b030e3a1111120e5b1f54560b6376744a670c1f490b4a5f04005544500f38f03789823031363f7b302c644830d4695b38396724cf57f1432ccb9218ba1d1c1e011aa4eae5176087b56b85bd3fd8905a1efa1808a189f6182ef6ce009c873f9fa6727de30ee4a8a6b2c95a64295d18125a19f59598644d32467fa5468179b753d29a7e0b550341dd84b3ad07ff215c700c1ea743fec8dc8b93b343fe4a1ba5f99def7295fa5f75d9d95b0cd84fd175e391975faaf5f5837a3a27b66626d4e5156878ea501744c4c5953b8b3d64647542ded72a075fedf2cfda43086dcc7d8018e1672abd27808343bca578775f5f1cac5412898942a1a000ea5416e4a41b633f0499c5d2ca02c7eac6181beaeb6bb1d027c6e511020221f9e243f3faa41e5230752a9de1347461d8144c302c8c8c0a61abed3df514d9de8e5f181e79ccc54831ea308c20545457aa42187af886bb2232b9faaa5180a5d3f8e1a6a2b423d87687d6dde0bc8646a451382f32641b843aab35aa38610ccbdf43881bc5da91f5b1db941dc4d1c1d0f1fa2fd928c53c5673852845ba2031562929fdcc43b6b32e0da869da5f53e49b102e4f1b3244da186fb63aecbeeb07172d6619324ed974a97e41e5f5043e6b53c3bb9aafd54493baae3c80f990ebd663c117c0b65c909a1d97c680195353681850d116dd58e1737485b1e460a80e42175edf99138c57545491c318ee6f8d5e340b4b049ed67d0504cf7aa0d62e66da587bf4405bfeb8f7b70816e516b4627439b26bc720fc931e1251300a058a18aa0689cf5b394d4335a4a7a71c005d39090f0d4d7dd3c8cc02bde2bd78b57f5a92a13fe29db557446eae06a78208fe584d3d9d8dc2a38d8a0a87a571d9bfc84628c95f9fc5cff6caecf1dd526b7935f0d04136f7bb2573047b1cf70a0c9d7b604af318c6e214d89b729d1493cee532b07b714fb6f1a21c70c8bf409c347aabaa71cc3c17fe7d306a3c4aaa81eb8033f854a5b0c29276dbf8c409b90b8013a72d8e6e89f418fe6bf9a75562185e0b3fd5cd7b8abf28cc89a0083ec71e19db3e56aaed781374c567f71b1f1ad42dd6f9ffa900af07f9d69e87c610857f3aee20302fee6cfc304f4d9377b50c545469b0a382e31882412e74480b979f97f9566427943d0a70748dcfd83fa609b76e077f6b88a5903f7203abac371032ae48069790336d8dcc7323ac9a57fb707dfdc9d47457aaee78356de8ae118865f9e9f2e98fc6d00dea89a38b6c2649c0963df50c4113429eee3e4c30ca08d60fdd00fdf324c4ca7d67a3af6a63f22c546c1d639f1fd115dc1fc76929859070e43963f650191cd4f429f8ab616862c538410efc7a7504719f24436f64c86eaa1d51b9b767e1ec4cad193fc4551377f4f541af8806183bb1da24d4076fefe1b927d6920a87cff8a4b36cf9c4e798554d623a74b375789ca77dbc6ed19377be5247e32eff63d00a0934717853e88726e0030328ed742ab573506e5745433b61be5c490d549a8e9fd3dc4b5ef9aae8a7c6c4deb551a274608b3a33b466b87aec3346e79f256e51c2a79f8a313f59b13b948b5ba70b47f2759ae2dfbb160e0131cbeb9574309970b47747d93ce58bd2d23bae0d03ecab72c2e192c6c27da0fa7b7a26098251840dcef432d268ee0c2bd17891df4bdd2fd72bfe3d184c08beb6f4efe884794815db72170eaf337d30c6bcfe29b2ba164741b0754f591fc0def418bcdd7959bc018199c9c21160791c71e5398fe6152fcdb431410bebe5f2b7f4769e9acaf0715945c9d8d56d7637452e86585bdb8cd9c230d7ab7e3ab1f3c7ad66191e0c1d1f66f0c2eb45205dd299fa269c6bbfa9d64611ff59a60030fc0e722bf109373054aa0a442bc4df09729669822ffb980f9e193631f63a4867fbc2acababb4af90738084d188a228ce2d8cf8379181c16aa4c581bc5192bb4800c458fafffbb311ce35ff1e1e3aa994734e5432e1e0e03e6f72c2319170155248111f5e30fe5447f34a426ff96d4e846508e84ee8320e9c8439485cc47e2a6970bbdcdd5d0e0f0b53c278931245bc7d59c32358740432206dae361515be7785eb527ca8c30a54bbf3b9c8c9e0a314db720f7231c130106d490b5c80a5ca7f66a425b11ede0efc4d5b7097d256474bd0af6d1f3731b559f90ba833d1dc394244e7885a003cd25ef5e5a37e337250320465c3bc1296497620e631f0fa3f3d73b97d33b082473c7cb6e9e30d139bd731640da5cb2cdd626b3025fa51730f322e36d94a48e931fcccd36dc09ef9851f60ffcf2a004ddf33ae91e1ba22431c0ae66a2085a037c1660ff22943b76b2031b2677f7b782902e6d6f37d308c915978400c534c3a374413320c7e96963f4232b43669f847c025e7b24ae46fb0c90323fcab9f31384124dc823da2cfb56259dd8b116e90e7da88ddc00f7e2e1afe8333fa3c227366a7ce59de806e99c1989871779a6c0e5532210d48785b9c6f7eefe67e028ac0d92a2dc6ffb99115c9f9f8fb2e5451642eb5df9cf9e340b5b18d9a49d09024c7d741c55983b6af257860c1599c336890604bad00754b108b4bd63fccdc9a2bd2884020abc7e56fd28ffa170cdefb9ac6ba313132323d287e749f7352b0'  
    # Put the actual hex data here
    ohio_id = 'tm001122'  # Replace with your Ohio ID
    output_file = 'output_image.png'

    # Process the data and save the image
    process_wireshark_data(hex_data, ohio_id, output_file)
